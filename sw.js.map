{"mappings":"gBACMA,EAAc,gBACJ,yBAGhBC,KAAKC,iBAAgB,YAAW,SAAGC,OAC3BC,EAAqBC,OAAOC,KAAKN,GAAgBO,KAAG,SACvDC,UAAQR,EAAeQ,MAG1BL,EAAMM,UACJC,OAAOJ,OAAOK,MAAI,SAAEC,UAClBC,QAAQC,IACNF,EAAWL,KAAG,SAAEQ,OACgC,IAA1CX,EAAmBY,QAAQD,GAAiB,OACvCL,OAAOO,OAAOF,cAQjCd,KAAKC,iBAAgB,SAAQ,SAAGC,GAC9BA,EAAMe,YACJC,MAAMhB,EAAMiB,QAAQC,SACjBV,MAAI,SAAEW,UACDA,EAASC,OAAS,KACpBC,MAAMC,IAAItB,EAAMiB,QAASE,EAASD,SAE7BC,KAERI,OAAK,kBACGhB,OAAOiB,KAAK3B,EAAc,iBAC9BW,MAAI,SAAEa,UAAUA,EAAMI,MAAMzB,EAAMiB","sources":["source/sw.js"],"sourcesContent":["const CACHE_VERSION = 3\nconst CURRENT_CACHES = {\n  'read-through': 'read-through-cache-v' + CACHE_VERSION\n}\n\nself.addEventListener('activate', (event) => {\n  const expectedCacheNames = Object.keys(CURRENT_CACHES).map(\n    (key) => CURRENT_CACHES[key]\n  )\n\n  event.waitUntil(\n    caches.keys().then((cacheNames) =>\n      Promise.all(\n        cacheNames.map((cacheName) => {\n          if (expectedCacheNames.indexOf(cacheName) === -1) {\n            return caches.delete(cacheName)\n          }\n        })\n      )\n    )\n  )\n})\n\nself.addEventListener('fetch', (event) => {\n  event.respondWith(\n    fetch(event.request.clone())\n      .then((response) => {\n        if (response.status < 400) {\n          cache.put(event.request, response.clone())\n        }\n        return response\n      })\n      .catch(() => {\n        return caches.open(CURRENT_CACHES['read-through'])\n          .then((cache) => cache.match(event.request))\n      })\n  )\n})\n"],"names":["$f3ad9e1bef67fbdd1f818dedcfe0e3e4$var$CURRENT_CACHES","self","addEventListener","event","expectedCacheNames","Object","keys","map","key","waitUntil","caches","then","cacheNames","Promise","all","cacheName","indexOf","delete","respondWith","fetch","request","clone","response","status","cache","put","catch","open","match"],"version":3,"file":"sw.js.map"}