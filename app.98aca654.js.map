{"mappings":"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","sources":["node_modules/@swc/helpers/src/_sliced_to_array.js","node_modules/@swc/helpers/src/_array_with_holes.js","node_modules/@swc/helpers/src/_iterable_to_array.js","node_modules/@swc/helpers/src/_non_iterable_rest.js","node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-4bf3f72aafcf1cb22d676541180e4d0d.js","source/main.js","node_modules/@parcel/runtime-js/lib/runtime-fd4537e095c4026c27b296b578cde478.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js"],"sourcesContent":["import arrayWithHoles from './_array_with_holes';\nimport iterableToArrayLimit from './_iterable_to_array';\nimport nonIterableRest from './_non_iterable_rest';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"sN19W\\\":\\\"app.98aca654.js\\\",\\\"c3uTp\\\":\\\"sw.js\\\"}\"));","const appDiv = document.getElementById('app')\nconst canvasDiv = document.getElementById('canvas')\nconst healthbarDiv = document.getElementById('healthbar')\n\nconst ctx = canvasDiv.getContext('2d')\n\nconst borderColor = '#ff0107'\nconst fillColor = '#f1f7ff'\nconst activeColor = '#000107'\nconst squareColor = '#00BFFF'\n\nhealthbarDiv.style.backgroundColor = fillColor\nhealthbarDiv.style.width = '0%'\n\nconst h = 4\nconst w = 4\n\nconst bSize = 0\n\nlet cellSize = 100\n\nif (window.innerWidth < 446) {\n  cellSize = 72\n} else if (window.innerWidth > 1024) {\n  cellSize = 128\n}\n\ncanvasDiv.height = h * (cellSize + bSize) + bSize\ncanvasDiv.width = w * (cellSize + bSize) + bSize\n\nfunction renderSquare(x, y, cColor) {\n  ctx.fillStyle = cColor\n  const rX = y * (cellSize + bSize) + bSize\n  const rY = x * (cellSize + bSize) + bSize\n  ctx.fillRect(rY, rX, cellSize, cellSize)\n}\n\nfunction render(_borderColor = borderColor, _fillColor = fillColor) {\n  ctx.fillStyle = _borderColor\n  ctx.fillRect(\n    0,\n    0,\n    (cellSize + bSize) * h + bSize,\n    (cellSize + bSize) * w + bSize\n  )\n\n  ctx.fillStyle = _fillColor\n\n  for (let y = 0; y < h; ++y) {\n    for (let x = 0; x < w; ++x) {\n      const rX = y * (cellSize + bSize) + bSize\n      const rY = x * (cellSize + bSize) + bSize\n      ctx.fillRect(rY, rX, cellSize, cellSize)\n    }\n  }\n}\n\nlet speed = 0\nlet clicks = 0\nlet misses = 0\nlet accuracy = 1\n\nconst breakPoint = 4\nlet missStreak = 0\n\nlet state = 'STOP'\nlet clock = 0.0\n\nlet msToLife = 250\n\nlet clickTime = new Date()\nlet hitTime = new Date()\n\nlet startTime = new Date()\nlet endTime = new Date()\nendTime.setSeconds(-120)\n\nlet clickStamps = []\nlet gameMap = []\n\nconst infoDiv = document.getElementById('information')\n\nfunction addInfo(tlabel, tvalue) {\n  const el = document.createElement('div')\n  el.classList.add('stats')\n  const label = document.createElement('div')\n  label.classList.add('stats-label')\n  label.textContent = tlabel\n  el.appendChild(label)\n  const value = document.createElement('div')\n  value.classList.add('stats-value')\n  value.textContent = tvalue\n  el.appendChild(value)\n  infoDiv.appendChild(el)\n}\n\nfunction textNumber(number) {\n  tNumber = String(Math.round(number * 100) / 100)\n\n  if (tNumber.slice(-2, -1) == '.') tNumber += '0'\n  if (tNumber.slice(-3, -2) != '.') tNumber += '.00'\n\n  return tNumber\n}\n\nfunction gameover() {\n  if (state == 'RUNNING') {\n    endTime = new Date()\n    state = 'GAMEOVER'\n    clock = 0.0\n\n    healthbarDiv.style.width = '0%'\n    render(borderColor, squareColor)\n\n    const deltaTime = (endTime - startTime) / 1000\n\n    speed = clicks / deltaTime\n    accuracy = clicks ? clicks / (clicks + misses) : 1\n\n    const minutes = Math.floor(deltaTime / 60)\n\n    if (minutes > 0) {\n      let seconds = Math.floor(deltaTime) % 60\n      if (seconds < 10) {\n        seconds = '0' + seconds\n      }\n      addInfo('time', `${minutes}:${seconds}`)\n    } else {\n      addInfo('time', textNumber(deltaTime))\n    }\n\n    addInfo('clicks', String(clicks))\n    addInfo('speed', textNumber(speed))\n    addInfo('accuracy', textNumber(accuracy * 100) + '%')\n    \n    infoDiv.classList.remove('hidden')\n  }\n}\n\nfunction run() {\n  if (state != 'RUNNING') {\n    return\n  }\n\n  const d = new Date()\n\n  msClock = endTime - d\n\n  if (msClock <= 0) {\n    return gameover()\n  }\n\n  clock = (d - startTime) / 1000\n\n  if (clock > 0) {\n    healthbarDiv.style.width = (100 * msClock) / (endTime - startTime) + '%'\n  } else {\n    healthbarDiv.style.width = '0%'\n  }\n\n  requestAnimationFrame(run)\n}\n\nfunction randomCell() {\n  const index = Math.floor(Math.random() * gameMap.length)\n  const cell = gameMap[index]\n  const [x, y] = cell.split('.')\n  renderSquare(x, y, squareColor)\n  gameMap.splice(index, 1)\n}\n\nconst activeCells = 3\n\nfunction start(reset = false) {\n  if (!reset && new Date() - endTime < 1500) {\n    return\n  }\n\n  infoDiv.classList.add('hidden')\n  infoDiv.innerHTML = ''\n\n  gameMap = []\n  for (let y = 0; y < h; ++y) {\n    for (let x = 0; x < w; ++x) {\n      gameMap.push(`${x}.${y}`)\n    }\n  }\n\n  render()\n\n  for (let i = 0; i < activeCells; ++i) {\n    randomCell()\n  }\n\n  speed = 0\n  clicks = 0\n\n  misses = 0\n  missStreak = 0\n  accuracy = 1\n\n  state = 'RUNNING'\n  clock = 0.0\n\n  msToLife = 250\n\n  startTime = new Date()\n  endTime = new Date()\n  endTime.setSeconds(endTime.getSeconds() + 32)\n\n  clickTime = startTime\n  hitTime = startTime\n\n  clickStamps = []\n\n  requestAnimationFrame(run)\n}\n\nlet cX, cY\n\nfunction hit(event) {\n  clicks += 1\n\n  if (state == 'RUNNING') {\n    let x, y\n    if (event instanceof TouchEvent) {\n      x = event.touches[0].clientX - canvasDiv.offsetLeft\n      y = event.touches[0].clientY - canvasDiv.offsetTop\n    } else if (event) {\n      x = event.offsetX\n      y = event.offsetY\n    } else {\n      x = cX - canvasDiv.offsetLeft\n      y = cY - canvasDiv.offsetTop\n    }\n\n    const cellX = Math.floor((x - (x % (cellSize + bSize))) / cellSize)\n    const cellY = Math.floor((y - (y % (cellSize + bSize))) / cellSize)\n\n    if (gameMap.includes(`${cellX}.${cellY}`) || cellY >= h || cellX >= w) {\n      endTime.setMilliseconds(endTime.getMilliseconds() - msToLife)\n\n      misses += 1\n      missStreak += 1\n    } else {\n      endTime.setMilliseconds(endTime.getMilliseconds() + msToLife)\n\n      hitTime = new Date()\n      missStreak = 0\n\n      renderSquare(cellX, cellY, fillColor)\n      randomCell()\n\n      gameMap.push(`${cellX}.${cellY}`)\n    }\n\n    clickTime = new Date()\n    clickStamps.unshift(clickTime)\n\n    if (missStreak >= breakPoint) {\n      gameover()\n    }\n\n    if (msToLife > 200) {\n      msToLife -= 0.8\n    } else if (msToLife > 166) {\n      msToLife -= 0.125\n    } else if (msToLife > 142) {\n      msToLife -= 1 / 150\n    } else if (msToLife > 125) {\n      msToLife -= 0.0016\n    }\n  } else {\n    start()\n  }\n\n  if (window.getSelection) {\n    window.getSelection().removeAllRanges()\n  } else if (document.selection) {\n    document.selection.empty()\n  }\n}\n\nrender(borderColor, squareColor)\n\ncanvasDiv.addEventListener('mousemove', (e) => {\n  cX = e.clientX\n  cY = e.clientY\n})\ncanvasDiv.addEventListener('touchstart', (e) => {\n  hit(e)\n  e.preventDefault()\n  return false\n})\ncanvasDiv.addEventListener('mousedown', hit)\ncanvasDiv.parentElement.addEventListener('contextmenu', (e) => {\n  e.preventDefault()\n  return false\n})\n\ndocument.body.addEventListener('keydown', (e) => {\n  if (['Space', 'Escape'].includes(e.code)) {\n    start(true)\n  } else if (['KeyZ', 'KeyX', 'KeyC', 'KeyV'].includes(e.code)) {\n    hit(null)\n  }\n})\nwindow.addEventListener('resize', (_) => {\n  if (state != 'RUNNING') {\n    cellSize = 100\n\n    if (window.innerWidth < 446) {\n      cellSize = 72\n    } else if (window.innerWidth > 1024) {\n      cellSize = 128\n    }\n\n    canvasDiv.height = h * (cellSize + bSize) + bSize\n    canvasDiv.width = w * (cellSize + bSize) + bSize\n\n    render(borderColor, squareColor)\n  }\n})\n\nif ('serviceWorker' in navigator && window.location.protocol != 'file:') {\n  navigator.serviceWorker.register('sw.js')\n}\n","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"sN19W\", \"c3uTp\")","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;"],"names":["arr","i","Array","isArray","$2caad49fb91b2599568b6dd8f88222e1$export$9099ad97b570f7c","iter","Symbol","iterator","Object","prototype","toString","call","from","$8607729fe30814bbe4c1a99481280d48$export$9099ad97b570f7c","TypeError","$fd7ad7649e929379c604e2ad8fcc0ab6$export$9099ad97b570f7c","$5d0fad81d9f079c5c6ee46c1e8c536bc$var$mapping","$5d0fad81d9f079c5c6ee46c1e8c536bc$export$357eb1b4f03c1402","pairs","keys","length","$5d0fad81d9f079c5c6ee46c1e8c536bc$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","document","getElementById","$e896de80a33cd7de679c6d900dd952fc$var$canvasDiv","$e896de80a33cd7de679c6d900dd952fc$var$healthbarDiv","$e896de80a33cd7de679c6d900dd952fc$var$ctx","getContext","$e896de80a33cd7de679c6d900dd952fc$var$borderColor","$e896de80a33cd7de679c6d900dd952fc$var$fillColor","$e896de80a33cd7de679c6d900dd952fc$var$squareColor","style","backgroundColor","width","$e896de80a33cd7de679c6d900dd952fc$var$cellSize","$e896de80a33cd7de679c6d900dd952fc$var$renderSquare","x","y","cColor","fillStyle","rX","rY","fillRect","$e896de80a33cd7de679c6d900dd952fc$var$render","param","param1","_borderColor","_fillColor","window","innerWidth","height","$e896de80a33cd7de679c6d900dd952fc$var$speed","$e896de80a33cd7de679c6d900dd952fc$var$clicks","$e896de80a33cd7de679c6d900dd952fc$var$misses","$e896de80a33cd7de679c6d900dd952fc$var$accuracy","$e896de80a33cd7de679c6d900dd952fc$var$missStreak","$e896de80a33cd7de679c6d900dd952fc$var$state","$e896de80a33cd7de679c6d900dd952fc$var$clock","$e896de80a33cd7de679c6d900dd952fc$var$msToLife","$e896de80a33cd7de679c6d900dd952fc$var$clickTime","Date","$e896de80a33cd7de679c6d900dd952fc$var$startTime","$e896de80a33cd7de679c6d900dd952fc$var$endTime","setSeconds","$e896de80a33cd7de679c6d900dd952fc$var$clickStamps","$e896de80a33cd7de679c6d900dd952fc$var$gameMap","$e896de80a33cd7de679c6d900dd952fc$var$infoDiv","$e896de80a33cd7de679c6d900dd952fc$var$addInfo","tlabel","tvalue","el","createElement","classList","add","label","textContent","appendChild","value","$e896de80a33cd7de679c6d900dd952fc$var$textNumber","number","tNumber","String","Math","round","slice","$e896de80a33cd7de679c6d900dd952fc$var$gameover","deltaTime","minutes","floor","seconds","concat","remove","$e896de80a33cd7de679c6d900dd952fc$var$run","d","msClock","requestAnimationFrame","$e896de80a33cd7de679c6d900dd952fc$var$randomCell","index","random","ref","$cbe58668fdd909cb9e477eba8f34e28e$export$9099ad97b570f7c","split","splice","$e896de80a33cd7de679c6d900dd952fc$var$start","innerHTML","push","getSeconds","$e896de80a33cd7de679c6d900dd952fc$var$cX","$e896de80a33cd7de679c6d900dd952fc$var$cY","$e896de80a33cd7de679c6d900dd952fc$var$hit","event","TouchEvent","touches","clientX","offsetLeft","clientY","offsetTop","offsetX","offsetY","cellX","cellY","includes","setMilliseconds","getMilliseconds","unshift","getSelection","removeAllRanges","selection","empty","addEventListener","e","preventDefault","parentElement","body","code","_","module","exports","getBundleURL","$02f1bd42cfb7cdd64170b2d1d22ec548$var$bundleURL","$02f1bd42cfb7cdd64170b2d1d22ec548$var$getBaseURL","url","replace","$02f1bd42cfb7cdd64170b2d1d22ec548$export$da289beea9c5b10d","err","matches","stack","match","$02f1bd42cfb7cdd64170b2d1d22ec548$var$getBundleURL","resolve","$f73df06fb50b25714272e20acc6d9d99$var$dirname","_filePath","filePath","slashIndex","lastIndexOf","$f73df06fb50b25714272e20acc6d9d99$var$relative","to","fromParts","shift","divergeIndex","toParts","parts","apply","join","fromId","toId","$f73df06fb50b25714272e20acc6d9d99$require$resolve","_dirname","_relative","navigator","location","protocol","serviceWorker"],"version":3,"file":"app.98aca654.js.map"}